package javaweb.repository;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javaweb.model.entity.Product;

public class ProductDaoImpl extends BaseDao implements ProductDao{

	@Override
	public List<Product> findAllProducts() {
		List<Product> products = new ArrayList<>();
		String sql = "select product_id, product_name, price, stock_quantity from product";
		try(Statement stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(sql)){
			
			while(rs.next()) {
				Product product = new Product();
				product.setProductId(rs.getInt("product_id"));
				product.setProductname(rs.getString("product_name"));
				product.setPrice(rs.getString("price"));
				product.setStockquantity(rs.getString("stock_quantity"));
			
				products.add(product);
			}
			
		}catch (SQLException e) {
			e.printStackTrace();
		}
		
		return products;
	}

	@Override
	public Product getProduct(String productname) {
		String sql = "select product_id, product_name, price, stock_quantity from product where productname = ?";
		try(PreparedStatement pstmt = conn.prepareStatement(sql)){
			pstmt.setString(1, productname);
			
			try(ResultSet rs = pstmt.executeQuery()){
				if(rs.next()) {
					Product product = new Product();
					product.setProductId(rs.getInt("product_id"));
					product.setProductname(rs.getString("product_name"));
					product.setPrice(rs.getString("price"));
					product.setStockquantity(rs.getString("stock_quantity"));
					
					return product; //返回 product 物件
				}
			}
			
		}catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public void addProduct(Product product) {
		String sql = "insert into products(product_name, price, stock_quantity) values(?,?,?)";
		
		try(PreparedStatement pstmt = conn.prepareStatement(sql)){
			pstmt.setString(1, product.getProductname());
			pstmt.setString(2, product.getPrice());
			pstmt.setString(3, product.getStockquantity());
			
			
			int rowcount = pstmt.executeUpdate();
			
			if(rowcount != 1) {
				throw new RuntimeException("新增失敗! ");
			}
			
		}catch(SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void updateProduct(Integer productId, String productname) {
		String sql = "update product set productname = ? where product_id = ?";
		try(PreparedStatement pstmt = conn.prepareStatement(sql)){
			
			pstmt.setString(1, productname);
			pstmt.setInt(2, productId);
			
			int rowcount = pstmt.executeUpdate();
			
			if(rowcount != 1) {
				throw new RuntimeException("修改失敗! userId: "+ productId + "active: " + productname);
			}
			
		}catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void deleteProduct(Integer productId) {
		// TODO Auto-generated method stub
		
	}





}
